security:
  enable_authenticator_manager: true

  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"
    Pimcore\Security\User\User: native
    App\Entity\User: "auto"

  providers:
    pimcore_admin:
      id: Pimcore\Security\User\UserProvider
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    admin:
      pattern: ^/admin
      provider: pimcore_admin
      # Temporarily comment out custom authenticators
      # custom_authenticators:
      #   - Pimcore\Bundle\AdminBundle\Security\Authenticator\AdminTokenAuthenticator
      form_login:
        login_path: pimcore_admin_login
        check_path: pimcore_admin_login_check
        default_target_path: pimcore_admin_index
        username_parameter: username
        password_parameter: password
        # Disable Symfony's built-in CSRF protection as Pimcore uses its own mechanism
        enable_csrf: false
        use_forward: true
      logout:
        path: pimcore_admin_logout
        target: pimcore_admin_login
      two_factor:
        auth_form_path: /admin/login/2fa
        check_path: /admin/login/2fa-verify
    main:
      lazy: true
      provider: app_user_provider
    # webservice:
    #   pattern: ^/webservice
    #   provider: pimcore_admin
    #   stateless: true
    #   custom_authenticators:
    #     - Pimcore\Bundle\AdminBundle\Security\Authenticator\WebserviceAuthenticator

  access_control:
    - { path: ^/admin/login, roles: PUBLIC_ACCESS }
    - { path: ^/admin/login/2fa, roles: PUBLIC_ACCESS }
    - { path: ^/admin/login/2fa-verify, roles: PUBLIC_ACCESS }
    # Temporarily allow access to admin area without requiring a role
    - { path: ^/admin, roles: PUBLIC_ACCESS }
    # - { path: ^/webservice, roles: ROLE_PIMCORE_USER }
